name: Backend CI

on:
  push:
    branches: [ main ]

concurrency:
  group: backend-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Build & Deploy
    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [22]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      # Ensure pm2 exists (safe to run repeatedly)
      - name: Ensure PM2 is installed
        run: |
          if ! command -v pm2 >/dev/null 2>&1; then
            npm i -g pm2
          fi
          pm2 -v

      - name: Stop existing PM2 apps (ignore failures)
        run: pm2 stop all || true

      # -------- Backend --------
      - name: Install backend deps
        working-directory: ./backend
        run: |
          npm i -g yarn
          yarn install --frozen-lockfile || yarn install

      - name: Write backend .env from secrets
        working-directory: ./backend
        run: |
          cat > .env <<EOF
          MONGO_URI=${{ secrets.MONGO_URI }}
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          PORT=${{ secrets.PORT || 5001 }}
          NODE_ENV=production
          EOF
          echo ".env written"

      - name: Run backend tests
        working-directory: ./backend
        env:
          MONGO_URI: ${{ secrets.MONGO_URI }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          PORT: ${{ secrets.PORT || 5001 }}
        run: |
          yarn test || npm test

      # -------- Frontend --------
      - name: Install frontend deps
        working-directory: ./frontend
        run: |
          yarn install --frozen-lockfile || yarn install

      - name: Build frontend
        working-directory: ./frontend
        run: |
          rm -rf build || true
          yarn build

      # -------- Deploy (PM2) --------
      - name: Start backend with PM2
        working-directory: ./backend
        env:
          MONGO_URI: ${{ secrets.MONGO_URI }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          PORT: ${{ secrets.PORT || 5001 }}
          NODE_ENV: production
        run: |
          # Prefer package.json "start" script. Example:
          #   "start": "node server.js"
          # Adjust the script/entry if yours differs.
          if jq -re '.scripts.start' package.json >/dev/null 2>&1; then
            pm2 start npm --name backend -- start
          else
            # Fallback to common entry file names; change if yours is different
            ENTRY=""
            for f in server.js index.js app.js dist/server.js; do
              [ -f "$f" ] && ENTRY="$f" && break
            done
            if [ -z "$ENTRY" ]; then
              echo "Could not find backend entry file; ensure package.json has a start script."
              exit 1
            fi
            pm2 start "$ENTRY" --name backend
          fi
          pm2 save

      - name: Serve frontend build with PM2 (static)
        working-directory: ./frontend
        run: |
          # Serves ./frontend/build on port 8080 by default; change if you want.
          # If you already use nginx, you can skip this and let nginx serve it.
          npx -y serve -s build -l 8080 >/dev/null 2>&1 &
          # Or with pm2:
          pm2 delete Frontend || true
          pm2 start npx --name Frontend -- serve -s build -l 8080
          pm2 save

      - name: Show PM2 status
        run: pm2 ls